{
  "Uuid": "af0ebf62-8eb6-437a-ac88-7404c21a20d0",
  "IsCustomNode": false,
  "Description": "",
  "Name": "renumber_doors_v3_script",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "987b3d9e83e6415fb3533e705065f2ae",
      "Name": "Categories",
      "Type": "dropdownSelection",
      "Value": "OST_Doors",
      "Description": "All built-in categories.",
      "SelectedIndex": 186
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "42c83514bd1a49a08e24866a7f549fa6",
      "Inputs": [
        {
          "Id": "9421e5ae2bbe46dabd6f2a79007ca2e3",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "486f108b75504700afa1e59aba458897",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 186,
      "SelectedString": "OST_Doors",
      "NodeType": "ExtensionNode",
      "Id": "987b3d9e83e6415fb3533e705065f2ae",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ad90735ee8549cfb35675198d13ec9f",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Import ToDSType(bool) extension method\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n \r\n# Start Transaction\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nfam_inst = IN[0]\r\n\r\nelements = []\r\nfor i in IN[0]:\r\n elements.append(UnwrapElement(i))\r\n\r\ndef TryGetToRoom(room, phase):\r\n try:\r\n    toRoom = room.get_ToRoom(phase)\r\n except:\r\n    toRoom = None\r\n    pass\r\n return toRoom\r\n\r\ndef TryGetFromRoom(room, phase):\r\n try:\r\n    fromRoom = room.get_FromRoom(phase)\r\n except:\r\n    fromRoom = None\r\n    pass\r\n return fromRoom\r\n\r\ndef append_letter(room_numbers_list, room_number):\r\n    '''If a room number already exists add a suffix to it. Not the best way of doing this..'''\r\n    # Check if the room number is already in the list\r\n    if room_number in room_numbers_list:\r\n        # If it is, loop through the letters A to Z and find the first one that is not already in the list\r\n        for letter in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\r\n            new_room_number = room_number + letter\r\n            if new_room_number not in room_numbers_list:\r\n                return new_room_number\r\n            elif letter == \"Z\":\r\n                # If the increment reaches \"Z\", loop back to \"A\" and double up the previous letter\r\n                for prev_letter in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\r\n                    if prev_letter != \"Z\":\r\n                        new_room_number = room_number[:-1] + prev_letter + \"Z\"\r\n                        if new_room_number not in room_numbers_list:\r\n                            return new_room_number\r\n        # If all letters have been used, return the duplicate room_number. If this happens you've got more problems than duplicate room numbers\r\n        return room_number\r\n    else:\r\n        # If the room number is not in the list, return it as-is\r\n        return room_number\r\n\r\n\r\nroom_number, room_name, doors, room = [], [], [], []\r\nfor i in elements:\r\n for phase in doc.Phases:\r\n    if i.CreatedPhaseId == phase.Id:\r\n     for phase2 in doc.Phases:\r\n        if TryGetToRoom(i, phase2) != None:\r\n         to_room = TryGetToRoom(i, phase2)\r\n         break\r\n        else:\r\n         to_room = None\r\n     for phase3 in doc.Phases:\r\n        if TryGetFromRoom(i, phase3) != None:\r\n         from_room = TryGetFromRoom(i, phase3)\r\n         break\r\n        else:\r\n         from_room = None\r\n\r\n     if from_room == None and to_room == None:\r\n        room_number.append(None)\r\n        room_name.append(None)\r\n        doors.append(None)\r\n     elif to_room != None:\r\n        Numbers = to_room.GetParameters(\"Number\")\r\n        Names = to_room.GetParameters(\"Name\")\r\n        \r\n        flattened_number = Numbers[0].AsString()\r\n        flattened_name = Names[0].AsString()\r\n\r\n        room_number.append(append_letter(room_number, flattened_number))\r\n        room_name.append(flattened_name)\r\n\r\n        # for n in range(len(Numbers)):\r\n        #   room_number.append(Numbers[n].AsString())\r\n        #   room_name.append(Names[n].AsString())\r\n        doors.append(i)\r\n        room.append(to_room)\r\n\r\nOUT = room_number, room_name, doors, room",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1f184a1a46d84faeab765ebfb3297dd0",
      "Inputs": [
        {
          "Id": "32022792312b40b7bb6b3441e9270b1b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67ea822e12d54b0b87f1aa5726275a78",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e04c9ec7338344eb97bf9ea1a090566d",
      "Inputs": [
        {
          "Id": "5d43ea11269843d7b7d79a55af4fc4aa",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30b12dc8617b47e2b5d8cbafd8ef002a",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "roomNumber = IN[0];\nroomName = IN[1];\nDoors = IN[2];\nRooms = IN[3];",
      "Id": "b596f23b86d9451a876e1876feafe21c",
      "Inputs": [
        {
          "Id": "8e675f023fb14c45a8647534f2531a66",
          "Name": "IN",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8cbf5debb2443caaa05d167612bb7ff",
          "Name": "",
          "Description": "roomNumber",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a18a7563e9014f6e8ad4084d7fb69f46",
          "Name": "",
          "Description": "roomName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8226a4f42c934f2aa879a8465a848ba8",
          "Name": "",
          "Description": "Doors",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c60b87a04792444394c84b357cf2a739",
          "Name": "",
          "Description": "Rooms",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "34f7d47b74ab4edba5f61943b0d99523",
      "Inputs": [
        {
          "Id": "afffcf2c346c404f87680f0f4bbe88f1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5bf12119e6b446294e1f5da2aa48a7b",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d18c3b27c0b49fe9b5d3d6e0bcdc3cc",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26e07f10f2b749eba76944ae6a48b764",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Mark\";",
      "Id": "c4b72e897f14476fa629eea7922ab715",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "43811765f26e41b7a77fe1f906ce98b2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "85e64d69755a43ebacefbeaf02df10c1",
      "Inputs": [
        {
          "Id": "5b5ea335c6fc41dea42e252b9b7fa97b",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7fe2764651e0474fbffb857c49593a0b",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "104ea7f42841489bac2a66fe681172bf",
      "Inputs": [
        {
          "Id": "615e68b14d58409998c7c189e3cc2b38",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0b59c10ca944fe99c06f8adbd992b7c",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "486f108b75504700afa1e59aba458897",
      "End": "32022792312b40b7bb6b3441e9270b1b",
      "Id": "a3a00cfa40bf46ddbb4d737b08f5f591"
    },
    {
      "Start": "6ad90735ee8549cfb35675198d13ec9f",
      "End": "9421e5ae2bbe46dabd6f2a79007ca2e3",
      "Id": "d9211a8ac43c4d9f9c33e23705adde0f"
    },
    {
      "Start": "67ea822e12d54b0b87f1aa5726275a78",
      "End": "8e675f023fb14c45a8647534f2531a66",
      "Id": "48c1be3d70fc4db388b88145c5b060c8"
    },
    {
      "Start": "c8cbf5debb2443caaa05d167612bb7ff",
      "End": "6d18c3b27c0b49fe9b5d3d6e0bcdc3cc",
      "Id": "833a2fa6355f4afa8cb57f8923de5c0a"
    },
    {
      "Start": "c8cbf5debb2443caaa05d167612bb7ff",
      "End": "5d43ea11269843d7b7d79a55af4fc4aa",
      "Id": "6fe60c731a7c490289f827bdc29ada2c"
    },
    {
      "Start": "8226a4f42c934f2aa879a8465a848ba8",
      "End": "afffcf2c346c404f87680f0f4bbe88f1",
      "Id": "f5b1a25ff2bc4811b18cc4af5734230c"
    },
    {
      "Start": "43811765f26e41b7a77fe1f906ce98b2",
      "End": "f5bf12119e6b446294e1f5da2aa48a7b",
      "Id": "9a858df09c694e96b7df35bbf93db428"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "All Elements of Category",
        "Id": "42c83514bd1a49a08e24866a7f549fa6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 429.27610763948496,
        "Y": 281.99999999999994
      },
      {
        "ShowGeometry": false,
        "Name": "Categories",
        "Id": "987b3d9e83e6415fb3533e705065f2ae",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 168.39999999999998,
        "Y": 296.663907615953
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "1f184a1a46d84faeab765ebfb3297dd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 771.2,
        "Y": 292.8
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "e04c9ec7338344eb97bf9ea1a090566d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1189.3208000991299,
        "Y": -201.04297550469579
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b596f23b86d9451a876e1876feafe21c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 993.15340203877577,
        "Y": 246.7216149860904
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "34f7d47b74ab4edba5f61943b0d99523",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1410.5529384127858,
        "Y": 549.38890717574532
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c4b72e897f14476fa629eea7922ab715",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1194.3556830002353,
        "Y": 569.73590123576628
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "85e64d69755a43ebacefbeaf02df10c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1404.7680204912124,
        "Y": 172.90707195507127
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "104ea7f42841489bac2a66fe681172bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1474.0286134340058,
        "Y": -134.03143635813072
      }
    ],
    "Annotations": [
      {
        "Id": "9941f73f848242379955b73f99154137",
        "Title": "I am using ToRoom and FromRoom but swapping the door direction doesn't update that if the door family (like the UNI one) doesn't have a calculation point",
        "Nodes": [],
        "Left": 682.84303786297255,
        "Top": 405.527597599102,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 68.549401740462372,
    "Y": 180.05373135594004,
    "Zoom": 0.766189997407438
  }
}